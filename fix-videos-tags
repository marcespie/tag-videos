#! /usr/bin/perl

# Copyright (c) 2024 Marc Espie <espie@openbsd.org>
# 
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use v5.36;
use FindBin;
use Getopt::Std;
use lib "$FindBin::Bin/lib";
use TagVideos::Base;
use TagVideos::Path;
use locale;

my $opts = {};

if (!getopts('d:v', $opts) || @ARGV != 0) {
	TagVideos::Base->usage("[-d database]");
}

my $db = TagVideos::Base->connect($opts->{d});


my $query = $db->prepare(qq{
	select id, path from file});

my $check = $db->prepare(qq{
	select id from file where path=?});

my $fixup_tags = $db->prepare(qq{
	update filetag set fileid=? where fileid=?});

my $fixup_path = $db->prepare(qq{
	update file set path=? where id=?});

my $rmtag = $db->prepare(qq{
	delete from filetag where fileid=?});
my $rmid = $db->prepare(qq{
	delete from file where id=?});


my ($id, $id2, $path);
$query->bind_columns(\($id, $path));
$check->bind_columns(\($id2));

$query->execute;


while ($query->fetch) {
	my $p2 = TagVideos::Path->resolve_link($path);
	if ($p2 ne $path) {
		say "$path -> $p2" if $opts->{v};
		$check->execute($p2);
		if ($check->fetch) {
			say "both exist, fixing tags" if $opts->{v};
			$fixup_tags->execute($id2, $id);
			# XXX if the same tag exists for both ids we
			# can't rename it, so erase the remaining duplicates
			$rmtag->execute($id);
			$rmid->execute($id);
		} else {
			say "updating path" if $opts->{v};
			$fixup_path->execute($p2, $id);
		}
		while ($check->fetch) {}
	}
}
$db->disconnect;
