#! /usr/bin/perl

use v5.36;

use Term::ReadLine;
use Data::Dumper;
use File::Spec;
use FindBin;
use lib "$FindBin::Bin/lib";
use Model;

my $dbpath = "$FindBin::Bin/mydb";

# as it the script gets two parameters: cwd + path name

die "bad number of parameters" if @ARGV < 2;
my $path = File::Spec->rel2abs($ARGV[1], $ARGV[0]);

say "Filename is: $path";

my $db = Model->connect($path);

my $term = Term::ReadLine->new("tag-videos");
my $attribs = $term->Attribs;
$attribs->{completion_entry_function} = $attribs->{list_completion_function};

sub list_tags
{
	my $tags = $db->find_tags;

	say "Tags: ", join(' ', @$tags);
}

sub prepare_completions
{
	$attribs->{completion_word} = 
		$db->selectcol_arrayref('alltags');
}

sub parse_tags($words, $f)
{
	for my $tag (split /\s+/, lc($words)) {
		&$f($tag);
	}
}


list_tags();
prepare_completions();

while (defined ($_ = $term->readline('> '))) {
	if (m/^(?:add|t)\s+(.*)/i) {
		parse_tags($1, 
		    sub($tag) {
			$db->create_tag($tag);
		    });
	} elsif (m/^rm\s+(.*)/i) {
		parse_tags($1, 
		    sub($tag) {
			$db->delete_tag($tag);
		    });
	} elsif (m/^suggest\s+(.*)/i) {
		parse_tags($1,
		    sub($tag) {
			my $tags = $db->suggestions($tag);
			say "Suggestions: ", join(' ', @$tags);
		    });
	} elsif (m/^list\s*$/i) {
		list_tags();
	} elsif (m/^known\s*$/) {
		prepare_completions();
		say "known tags: ", join(' ', @{$attribs->{completion_word}});
	} elsif (m/^help\s*/i) {
		say "help/add/t/rm/list/suggest/known/quit"
	} elsif (m/^(?:quit|q)\s*$/i) {
		last;
	} elsif (m/^\s*$/) {
		# nothing !
	} else {
		say "Unknown command $_\n"
	}
}
